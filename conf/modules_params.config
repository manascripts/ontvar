/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Module-specific parameter configurations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

params {

    // SV callers
    sniffles = [
        tandem_repeats: "${projectDir}/assets/vntr/hg38.p14.trf.bed",
        sniffles_args: "--mapq 20 \
            --minsvlen 50 \
            --minsupport 5 \
            --cluster-merge-pos 100"
    ]
    cutesv = [
        cutesv_args: "--genotype \
            --min_support 5 \
            --min_size 50 \
            --min_mapq 20 \
            --max_cluster_bias_INS 100 \
            --diff_ratio_merging_INS 0.3 \
            --max_cluster_bias_DEL 100 \
            --diff_ratio_merging_DEL 0.3"
    ]
    severus_with_control = [
        vntr_bed: "${projectDir}/assets/vntr/hg38.p14.trf.bed",
        severus_with_control_args: "--min-sv-size 50 \
            --min-mapq 20 \
            --min-support 5"
    ]
    severus_no_control = [
        vntr_bed: "${projectDir}/assets/vntr/hg38.p14.trf.bed",
        severus_no_control_args: "--min-sv-size 50 \
            --PON \"${projectDir}/assets/pon/PoN_1000G_hg38_extended.tsv.gz\" \
            --min-mapq 20 \
            --min-support 5"
    ]
    
    // Jasmine sample and cohort consensus
    jasminesv_sample = [
        fasta: null,
        fasta_fai: null,
        chr_norm: null,
        jasminesv_sample_args: """--min_overlap 0.7 \
            --spec_len 50 \
            --min_seq_id 0.7 \
            --max_dist_linear 0.5 \
            --max_dist 3000 \
            --min_dist 100 \
            --pre_normalize \
            --normalize_type \
            --non_mutual_distance \
            --spec_reads 5"""
    ]
    jasminesv_cohort = [
        fasta: null,
        fasta_fai: null,
        chr_norm: null,
        jasminesv_cohort_args: """--min_overlap 0.7 \
            --spec_len 50 \
            --min_seq_id 0.7 \
            --max_dist_linear 0.5 \
            --max_dist 3000 \
            --min_dist 100 \
            --pre_normalize \
            --normalize_type \
            --non_mutual_distance \
            --spec_reads 5"""
    ]

    // AF annotation with SVDB
    svdb_query = [
        vcf_dbs: [
            "${projectDir}/assets/svdb_databases/gnomad.v4.1.sv.sites.rmMissing.vcf.gz",
            "${projectDir}/assets/svdb_databases/UWONT_450_AF.vcf.gz"
        ],
        in_frq: ["AF", "PFneedLR"],
        out_frq: [ "AFgnomAD", "AFneedLR" ],
        in_occ: [ "AN", "AN" ],
        out_occ: [ "ANgnomAD", "ANneedLR" ],
        prefix: "cohort",
        svdb_query_args: "--bnd_distance 2500 \
            --overlap 0.8"
    ]
    // svdb_query_sample = [
    //     // uses params.svdb_query by default
    //     svdb_query_args: params.svdb_query.svdb_query_args
    // ]

    // bcftools filtering
    bcftools_view_sample = [
        regions: null,
        targets: null,
        samples: null,
        bcftools_view_sample_args: """--include 'INFO/SUPP>=1'""",
    ]

    bcftools_view_cohort = [
        regions: null,
        targets: null,
        samples: null,
        bcftools_view_cohort_args: """--include '(INFO/AFgnomAD="." || INFO/AFgnomAD<0.1) && (INFO/AFneedLR="." || INFO/AFneedLR<0.006)'""",
    ]
    // bcftools_view_per_sample = [
    //     regions: null,
    //     targets: null,
    //     samples: null,
    //     bcftools_view_per_sample_args: params.bcftools_view_cohort?.bcftools_view_cohort_args ?: """--include '(INFO/AFgnomAD="." || INFO/AFgnomAD<0.1) && (INFO/AFneedLR="." || INFO/AFneedLR<0.006)'""",
    // ]

    // AnnotSV
    annotsv = [
        genome_build: "GRCh38",
        annotations: null,
        candidate_genes: null,
        false_positive_snv: null,
        gene_transcripts: null,
        annotsv_args: """-vcf 1 \
            -SVminSize 0"""
    ]

}